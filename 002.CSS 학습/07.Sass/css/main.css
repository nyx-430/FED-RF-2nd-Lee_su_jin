@charset "UTF-8";
/* 주석2 */
/************************************************************* 
    [ 사스 핵심 사용법 ]

    1. 사스 확장자별 파일 구분
    (1) .scss - 사스 관리 파일
        -> .sass 확장자는 중괄호, 세미콜론을 사용하지 않는
        문법 사스 파일임. 우리는 scss 파일을 사용할 것임.
    (2) .css.map - 사스 파일과 CSS 연결 정보 파일
    (3) .css - 실제로 적용되는 컴파일된 CSS

    2. 사스 파일 컴파일하기
        -> Live Sass Compiler 확장 프로그램 설치 후
        하단 "Watch Sass" 클릭하여 작동시킴.
        -> 에러가 없는한 컴파일하여 같은 이름의 css 파일을 생성함.
        "Watching..." 상태가 됨. 다시 클릭시 실시간 변환상태가 꺼짐.
        -> 에러 발생시 컴파일이 안 되고 cmd창에 에러메시지가 뜬다!

    3. 주요 문법
    (1) 네스팅 기법
        - 선택자 중괄호 안에 다른 하위 선택을 하는 것.
        예) div{h1{color:red;}}
        -> 장점: 같은 셋팅요소를 선택시 중복된 선택자의 반복을
        하지 않아도 된다!
        또한 같은 구성요소를 묶어서 관리 가능!
    (2) 속성접두어 묶음기법
        - 반복되는 같은 종류의 하위 속성의 접두어를 한번만 사용하여
        셋팅을 묶어주는 방법.
        예) font: {size: 12px; {weight: bold;}}
    (3) 변수사용기법
        - 동일하게 사용할 값을 변수에 넣고 디자인을 배치함
        - 변수 사용법 -> $변수명: 값
        - 변수명은 모두 붙여쓰며 구분 단어는 캐믈케이스(carmelCase) 또는
        캐밥케이스(cabap-case)를 사용한다!
        - 변수의 범위는 변수 선언 후 하위로 상속되어 값이 유지됨.
    (4) 파일 분리기법 : @import
        - 부분 파일을 분리하여 공통 모듈로 합쳐서 사용한다.
        - 부분 파일명은 사스에서 앞에 언더바를 붙여서 사용하는 것이
        원칙이지만, 앞에 언더바를 안 써도 기본적으로 부분 파일 처리를 해줌.
        (자동으로 앞에 언더바와 확장자를 생략해 준다!)
        - 파일 호출시 확장자 생략 가능함.
        예) @import "reset";
        -> 일반 CSS @import와 다른 점은 http 요청을 하지 않음!
    (5) 믹스인 : 일종의 공통 CSS코드를 리턴하는 함수
        1) 셋팅 형식
        [1] 전달변수가 없는 믹스인
        @mixin 믹스인이름{CSS코드}

        [2] 전달변수가 있는 믹스인
        @mixin 믹스인이름(변수){CSS코드}

        [3] 전달변수가 있고, 기본값도 있는 믹스인
        @mixin 믹스인이름(변수:기본값){CSS코드}

        2) 믹스인 호출 방법 : 믹스인을 포함하라!(include)
        -> @include 믹스인이름;
        -> @include 믹스인이름(전달값);
*************************************************************/
/* 리셋 CSS - reset.css */
/* 기본 초기화 셋팅 */
/* 기본 초기화 */
html,
body,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
dl,
dt,
dd,
p,
figure,
figcaption {
  margin: 0;
  padding: 0;
}

/* ul, ol 순번, 블릿 없앰 */
ul, ol {
  list-style: none;
}

/* a요소 리셋 */
a {
  color: #222;
  text-decoration: none;
}

/* heading 요소 글자 크기 */
h1, h2, h3, h4, h5, h6 {
  font-size: 100%;
  /* 박스 디자인시 글자 크기로 인한
  영향을 없애기 위한 초기화! */
}

/* 이미지 초기화 */
img {
  /* 이미지 링크시 서버에서 볼 때
  파란 테두리 없앰 */
  border: none;
  /* 박스에 이미지만 넣을 때
  엔터 간극 4px 하단 공백 없애기  */
  vertical-align: middle;
}

.wrapper {
  max-width: 1000px;
  margin: 0 auto;
}

.top-area {
  color: rgb(18, 81, 197);
}
.top-area h1 {
  color: aqua;
  font-size: 40px;
  font-family: "Times New Roman";
  text-align: center;
  text-decoration: underline;
  text-underline-offset: 10px;
  text-shadow: 5px 5px 4px rgba(0, 0, 0, 0.431372549);
  background-color: rgb(161, 107, 232);
  background-image: url(../images/flower.png);
  background-size: 70px;
  background-position: center;
  background-repeat: repeat-x;
  padding: 20px;
}

/* 메인영역 */
.main-area section {
  border-color: pink;
  border-style: dashed;
  border-width: 7px;
  margin-bottom: 20px;
  padding: 20px;
}
.main-area h3 {
  color: darkblue;
  font-size: 40px;
  font-family: "Times New Roman";
  text-align: center;
  text-decoration: underline;
  text-underline-offset: 10px;
  text-shadow: 5px 5px 4px rgba(0, 0, 0, 0.431372549);
}
.main-area ul, .main-area ol, .main-area p {
  line-height: 2;
  font-size: 24px;
}

/* 하단 타이틀 */
.bottom-title {
  color: red;
  font-size: 40px;
  font-family: "Times New Roman";
  text-align: center;
  text-decoration: underline;
  text-underline-offset: 10px;
  text-shadow: 5px 5px 4px rgba(0, 0, 0, 0.431372549);
}/*# sourceMappingURL=main.css.map */