@charset "utf-8";
/* 맨위에 utf-8 인코딩 설정 필수! 
- 외부 CSS 파일은 파일 자체적으로 처리되므로 인코딩 형식도 따로 지정해야 한다 */

/* Info PJ 공통 CSS - common.css */

/* 웹폰트 구글CDN(Content Delivery Network) */
@import url('https://fonts.googleapis.com/css2?family=Black+And+White+Picture&family=Gugi&family=Black+And+White+Picture&family=Black+Han+Sans&family=Noto+Sans+KR:wght@100..900&family=Noto+Sans+KR:wght@100..900&family=Orbit&display=swap');

/* 
기사본문용 font-family: "Noto Sans KR", sans-serif;
서브타이틀용 font-family: 'Black Han Sans', sans-serif;
font-family: 'Orbit', sans-serif;
font-family: 'IBM Plex Sans KR', sans-serif;
font-family: "Black And White Picture", system-ui;
font-family: "Gugi", sans-serif;
*/

/* CSS코딩구역 */
/* 
CSS 설정 코딩방식

선택자{
    속성:값;
}

-> 선택자는 요소명/클래스명/아이디명 등으로 사용

[ CSS 박스모델 ]
- 모든 html요소는 사각형으로 되어 있고
가로,세로,패딩,마진,보더의 속성으로 구성됨
width/height/padding/margin/border
-> 기본박스 디자인은 가로,세로크기를 줄경우
패딩과 보더는 박스 크기에 포함되지 않는다!
->>> 이런 박스를 컨텐트박스라고함!


*/

/* 공통 디자인 : 클래스를 주로 사용함! */
.part {
    /* 박스모델 5가지 셋팅 */
    /* 가로크기-기본값 auto
        블록의 기본값은 부모박스 채우기
    인라인의 기본값은 내용물만큼 */
    /* width: 750px; */

    /* 최대 가로 크기로 유동적인 사이즈 만들기 */
    max-width: 1000px;
    /* 최대 크기 1000px을 유지하다가 화면 또는 부모박스가
    이 크기 보다 작아지면 자동으로 auto로 전환되어
    가로 스크롤바가 안 생기고 크기가 화면에 적응된다! */

    /* 세로크기-기본값 auto 
모든 요소에서 기본값은 내용물만큼
안주면 기본값 auto로 설정됨 */
    /* height: 300px; */
    /* height: auto; */
    border: 1px solid #000;
    /* 보더 모서리 둥글게 */
    border-radius: 20px;

    /* 패딩 
    padding: 수치;
    (4방향모두)
    padding: 수치 수치;
    (위아래 양쪽)
    padding: 수치 수치 수치;
    (위 양쪽 아래)
    padding: 수치 수치 수치 수치;
    (위 오른 아래 왼)
*/
    padding: 50px;

    /* 박스가 패딩,보더를 포함하는 설정 */
    box-sizing: border-box;

    /* content-box가 기본값임 */
    /* box-sizing: content-box; */

    /* 마진 
    margin: 수치;
    (4방향모두)
    margin: 수치 수치;
    (위아래 양쪽)
    margin: 수치 수치 수치;
    (위 양쪽 아래)
    margin: 수치 수치 수치 수치;
    (위 오른 아래 왼)

    [블록박스 가로방향 중앙정렬 마진설정]
    마영오~!
    margin: 0 auto;
    
*/
    margin: 20px auto;
}

/* 상단영역, 하단영역 공통
-콤마(,)는 그룹선택자 */
header,
footer {
    text-align: center;
    /* color: red; */
}

/* 상단영역 */
#top-area {
    background-color: #d9e9d5;
}

/* 하단영역 */
#info-area {
    background-color: #e4e4e4;
    font-family: 'IBM Plex Sans KR', sans-serif;
}

/* 주소요소 */
#info-area address{
    /* 이탤릭 해제: fsn */
    font-style: normal;
}

/* 타이틀 */
.tit {
    font-family: 'Orbit', sans-serif;
    font-size: 35px;
}

/* 메뉴 */
.menu {
    font-family: 'IBM Plex Sans KR', sans-serif;
    font-size: 15px;
}

/* 메뉴링크 */
.menu a {
    color: #222;
    /* 글자 밑줄 없앰 */
    text-decoration: none;
    font-size: 21px;
}

/* 메뉴링크 오버시
:hover는 가상 클래스(마우스오버 시) */
.menu a+a:hover {
    text-decoration: overline;
    text-decoration-style: wavy;
    color: hotpink;
}

/* [선택자들]
1. 타입 선택자: 태그명
2. 아이디/클래스 선택자: 요소 이름
3. 종속 선택자: 요소명+이름 (h1#my)
4. 자손 선택자: 띄어쓰기
5. 직계자식 선택자: 꺽쇠(>)
6. 그룹 선택자: 콤마(,)
7. 형제 선택자: 플러스(+)
예) a+a -> 앞에 a 요소가 있는 a요소 선택
*/
